def notifyObj
node{
    env.WORKSPACE=pwd()
    try{
        stage("Checkout"){
           dir("ossim-rpm-dependencies"){
              git branch: "${OSSIM_GIT_BRANCH}", url: "${GIT_PUBLIC_SERVER_URL}/ossim-rpm-dependencies.git"
           }
        }
        stage( "Download Artifacts" ) {
            dir( "${ env.WORKSPACE }" ) {
               step ([$class: "CopyArtifact",
                      projectName: "ossim-ci-${OSSIM_GIT_BRANCH}",
                      filter: "ossim-ci-${OSSIM_GIT_BRANCH}.tgz",
                      flatten: true])
               sh "tar xvfz ossim-ci-${OSSIM_GIT_BRANCH}.tgz"
               notifyObj = load "${env.WORKSPACE}/ossim-ci/jenkins/pipeline/notify.groovy"
            }
        }
        stage ("Build")
        {
            sh "${env.WORKSPACE}/ossim-rpm-dependencies/scripts/rpmbuild-dependencies.sh"
        }
        stage("Archive"){

            archiveArtifacts 'dependency-rpms.tgz'
        }
    }
    catch(e)
    {
        currentBuild.result = "FAILED"
        notifyObj?.notifyFailed()
    }
    stage("Clean Workspace"){
      step([$class: 'WsCleanup'])
    }

}
